#!/bin/bash

set -e

if [ "$1" != "configure" ]; then
	exit 0
fi

# Touch and set permisions on default log files on installation
update-rc.d hestia defaults > /dev/null
invoke-rc.d hestia start || true

# Detect "physical" NICs only (virtual NICs created by Docker, WireGuard etc. are excluded)
physical_nics="$(ip -d -j link show | jq -r '.[] | if .link_type == "loopback" // .linkinfo.info_kind then empty else .ifname end')"
if [ -z "$physical_nics" ]; then
	physical_nics="$(ip -d -j link show | jq -r '.[] | if .link_type == "loopback" then empty else .ifname end')"
fi
for nic in $physical_nics; do
	if [ -z "$ipv4_scope_global" ]; then
		ipv4_scope_global="$(ip -4 -d -j addr show "$nic" | jq -r '.[] | select(length > 0) | .addr_info[] | if .scope == "global" then .local else empty end')"
	fi
	if [ -z "$ipv6_scope_global" ]; then
		ipv6_scope_global="$(ip -6 -d -j addr show "$nic" | jq -r '.[] | select(length > 0) | .addr_info[] | if .scope == "global" then .local else empty end')"
	fi
done

# Adapt port listing in nginx.conf depended on availability of IPV4 and IPV6 network interface
NGINX_CONF="/usr/local/hestia/nginx/conf/nginx.conf"
if [ -z "$ipv4_scope_global" ]; then
	sed -i 's/^\([ \t]*listen[ \t]*[0-9]\{1,5\}.*\)/#\1/' "$NGINX_CONF"
else
	sed -i 's/#\([ \t]*listen[ \t]*[0-9]\{1,5\}.*\)/\1/' "$NGINX_CONF"
fi
if [ -z "$ipv6_scope_global" ]; then
	sed -i 's/^\([ \t]*listen[ \t]*\[\:\:\]\:[0-9]\{1,5\}.*\)/#\1/' "$NGINX_CONF"
else
	sed -i 's/#\([ \t]*listen[ \t]*\[\:\:\]\:[0-9]\{1,5\}.*\)/\1/' "$NGINX_CONF"
fi

# Run triggers only on updates
if [ ! -e "/usr/local/hestia/data/users/admin" ]; then
	exit
fi

###############################################################
#                Initialize functions/variables               #
###############################################################

if [ -z "$HESTIA" ]; then
	export HESTIA='/usr/local/hestia'
	PATH=$PATH:/usr/local/hestia/bin
	export PATH
fi

# Check if preinstall hook exists
if [ -e "/etc/hestiacp/hooks/nginx/pre_install.sh" ]; then
	/etc/hestiacp/hooks/nginx/pre_install.sh
fi

# Load upgrade functions and variables
source /usr/local/hestia/func/main.sh
source /usr/local/hestia/func/upgrade.sh
source /usr/local/hestia/conf/hestia.conf
source /usr/local/hestia/install/upgrade/upgrade.conf

# Reset backend port
if [ -n "$BACKEND_PORT" ]; then
	/usr/local/hestia/bin/v-change-sys-port $BACKEND_PORT
fi

if [ -e "/etc/hestiacp/hooks/nginx/post_install.sh" ]; then
	/etc/hestiacp/hooks/nginx/post_install.sh
fi

# Restart hestia service
if [ -f "/etc/init.d/hestia" ]; then
	systemctl restart hestia > /dev/null 2>&1
fi
